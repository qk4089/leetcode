package _26

//给你一个升序排列的数组nums，请你原地删除重复出现的元素，使每个元素只出现一次，返回删除后数组的新长度。元素的相对顺序应该保持一致。
//由于在某些语言中不能改变数组的长度，所以必须将结果放在数组nums的第一部分。更规范地说，如果在删除重复项之后有k个元素，那么nums的前k个元素应该保存最终结果。
//将最终结果插入nums的前k个位置后返回k。不要使用额外的空间，你必须在原地修改输入数组并在使用O(1)额外空间的条件下完成。

//提示：
//	1<=nums.length<=3*104
//	-104<=nums[i]<=104
//	nums已按升序排列

//示例
//输入：nums=[1,1,2]
//输出：2,nums=[1,2,_]
//解释：函数应该返回新的长度2，并且原数组nums的前两个元素被修改为1,2。不需要考虑数组中超出新长度后面的元素。

//输入：nums=[0,0,1,1,1,2,2,3,3,4]
//输出：5,nums=[0,1,2,3,4]
//解释：函数应该返回新的长度5，并且原数组nums的前五个元素被修改为0,1,2,3,4。不需要考虑数组中超出新长度后面的元素。

func removeDuplicates(nums []int) int {
	index := 0
	for i := 1; i < len(nums); i++ {
		if nums[i] != nums[index] {
			index++
			nums[index] = nums[i]
		}
	}
	return index + 1
}
